h2. Developer prereqs

* Ruby 2.x (managed via rbenv)
* git
* <a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html">JDK</a>
* <a href="http://bundler.io">Bundler</a>
* cmake <pre>brew install cmake</pre>
* postgresql <pre>brew install postgresql</pre>
* install imagemagick to handle the tiff to jp2 conversion <pre>brew install imagemagick --with-libtiff --with-jp2</pre>
* redis running on port 6379 (default) <pre>brew install redis</pre>

h2. Developer Installation and Configuration

* Clone the repository to your local computer <code>git clone git@github.com:nulib/images.git</code>
* Replace the <code>config/*.yml.example</code> configuration files with actual config values and rename to <code>.yml</code>
* Configure access to Sidekiq Pro (must obtain username/password) <pre>bundle config gems.contribsys.com username:password</pre>
* Replace <code><images app>/jetty</code> with <i>known working jetty directory</i>
* <code>cd</code> inside the application directory and run <pre>bundle install</pre>
* Create the database <pre>bundle exec rake db:migrate</pre>
* Start Jetty <pre>bundle exec rake jetty:start</pre>
* Configure Jetty <pre>bundle exec rake jetty:config</pre>
* Refresh Hydra Fixture data <pre>bundle exec rake hydra:fixtures:refresh
* Prepare the test database <pre>bundle exec rake db:test:prepare</pre>

h2. Running the application
* <code>cd</code> to the application directory
* Start redis <pre>redis-server</pre>
* Start Sidekiq <pre>bundle exec sidekiq</pre>
* Start Fedora and Solr <pre>rake jetty:start</pre> (if not already running)
* Confirm Fedora is running on <a href="http://localhost:8983/fedora/">http://localhost:8983/fedora/</a>
* Confirm Solr is running on <a href="http://localhost:8983/solr/#/">http://localhost:8983/solr/</a>
* Start the Rails app, specifying port 3331 <pre>rails server -p 3331</pre> 
* Confirm the app is available at <a href="http://localhost:3331/">http://localhost:3331/</a>

h2. Testing the application

You'll need to be connected to the VPN.

To run all the tests
<pre>rspec spec</pre>

To run the integration tests
<pre>rspec spec/features</pre>

h2. Deploying

<pre>cap environment deploy</pre>
Keep in mind that a deploy only copies over whatever files are in the public github repo, so many config files don't get copied during a deploy.


